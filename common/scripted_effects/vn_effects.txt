 
refresh_subject_count_loyalty_penalty = {
    every_subject = {
		erase_modifier = { MOD = divided_patronage }
	}
	if = {
		limit = {
			NOR = {
				has_civic = civic_feudal_realm
				has_civic = civic_franchising
				has_ascension_perk = ap_shared_destiny
			}
			subjects > 1
		}
		set_variable = { which = subjects_minus_one value = trigger:subjects }
		subtract_variable = { which = subjects_minus_one value = 1 }
		every_subject = {
			add_modifier = {
				modifier = divided_patronage
				multiplier = PREV.subjects_minus_one
			}
		}
		clear_variable = subjects_minus_one
	
	   else = {
	        set_variable = { which = subjects_minus_one_half value = trigger:subjects }
	        set_variable = { which = diff1 value = trigger:subjects }
	        change_variable = { which = diff1 value = 1 }
	        multiply_variable = { which = diff1 value = 0.5 }
	        subtract_variable = { which = subjects_minus_one_half value = diff1 }
	        every_subject = {
	        	#erase_modifier = { MOD = divided_patronage }
	        add_modifier = {
				modifier = divided_patronage
				multiplier = PREV.subjects_minus_one_half
		        }
		    }
	       clear_variable = subjects_minus_one_half
	       clear_variable = diff1
	     }
	}
}

vn_add_empire_size_penalty = {
	
	erase_modifier = { MOD = vn_empire_size_mods }
    set_variable = { which = subject_weight value = 0 }
	
	set_variable = { which = subject_weight value = 0  }
	every_subject = { 
		  prev = {
			  
				  if = {
			                limit = { NOR = { 
								               agreement_preset = preset_tributary
								               agreement_preset = preset_subsidiary
									  }
						    }
			                change_variable = { which = subject_weight value = 0.25 }
			                
			                else = {
						      change_variable = { which = subject_weight value = 0.1 }   
						   }
					   }
			  }
	}
    
	log = "!!!!!!!!!! Vassal Weight: \\[This.subject_weight]" 
	log = "!!!!!!!!!! Vassal Name: \\[Root.target.GetName]"
	
	add_modifier = {
	              modifier = vn_empire_size_mods
	              multiplier = subject_weight
	           }
	
	#log = "!!!!!!!!!!!!!!! Name: [Root.target.GetName]."
	clear_variable = subject_weight

}

vn_count_subject = {
     
    set_variable = { which = my_test_var value = trigger:subjects }
	log = "!!!!!!!!!!!!!!! test Internal subjects: \\[This.my_test_var]."
	if = {
		limit = {
			      NOT = { ROOT.owner = { is_variable_set = my_subject_counter } }
			    }
	
	          ROOT.owner = {
	              set_variable = { which = my_subject_counter value = 0  }
	              set_variable = { which = my_tributary_counter value = 0  }
	              set_variable = { which = my_subsidiary_counter value = 0  }
	          
	          }
	}
	else = {
		     ROOT = {
				        # This code gets executed twice because reasons ... so let's do a prog(r)amer move
				        if = { limit = { owner = { check_variable = { which = my_subject_counter value < PREVPREV.my_test_var } }}
							   owner = {change_variable = { which = my_subject_counter value = 1 } }
							   
							   if = { limit = {  agreement_preset = preset_subsidiary  }
				                      owner = { change_variable = { which = my_subsidiary_counter value = 1 } }
									  target = { set_country_flag = my_subsidiary_check }
				                    }
							   else_if = { limit = {  agreement_preset = preset_tributary }
				                      owner = { change_variable = { which = my_tributary_counter value = 1 } }
				                      target = { set_country_flag = my_tributary_check }
					           }
							   
		                }
						else_if = { limit = { owner = { check_variable = { which = my_subject_counter value = PREVPREV.my_test_var } } }
				              if = { limit = { AND = {  agreement_preset = preset_subsidiary  
										                target = { NOT = { has_country_flag = my_subsidiary_check } }
													  }
									       }
									       owner = { change_variable = { which = my_subsidiary_counter value = 1 } }
									       target = { set_country_flag = my_subsidiary_check }
						              
				                    }
							   else_if = { limit = { AND = {  NOT = { agreement_preset = preset_subsidiary  }
										                  target = {  has_country_flag = my_subsidiary_check }
													  }
									               }
							               owner = { subtract_variable = { which = my_subsidiary_counter value = 1 } }
									       target = { remove_country_flag = my_subsidiary_check }
					           }
							   else_if = { limit = { AND = {  agreement_preset = preset_tributary  
										                target = { NOT = { has_country_flag = my_tributary_check } }
													  }
									       }
				                      owner = { change_variable = { which = my_tributary_counter value = 1 } }
									  target = { set_country_flag = my_tributary_check }
					           }
							   else_if = { limit = { AND = {  NOT = { agreement_preset = preset_tributary  }
										                  target = {  has_country_flag = my_tributary_check }
													  }
									               }
							               owner = { subtract_variable = { which = my_tributary_counter value = 1 } }
									       target = { remove_country_flag = my_tributary_check }
					           }
				        }
			}
	}
	
	log = "!!!!!!!!!!!!!!! test Internal object (add): \\[ROOT.owner.my_subject_counter]."
	log = "!!!!!!!!!!!!!!! test Internal object owner (add): \\[ROOT.owner.GetName]."
	log = "!!!!!!!!!!!!!!! test Subsidiary counter (add): \\[ROOT.owner.my_subsidiary_counter]."
	log = "!!!!!!!!!!!!!!! test Tributary counter (add): \\[ROOT.owner.my_tributary_counter]."
	clear_variable = my_test_var
}

vn_remove_subject = {
     
    set_variable = { which = my_test_var value = trigger:subjects }
	log = "!!!!!!!!!!!!!!! test Internal subjects: \\[This.my_test_var]."
	if = {
		limit = {
			       ROOT.owner = { is_variable_set = my_subject_counter } 
			    }
	
                   ROOT = {
				        if = { limit = { owner = { check_variable = { which = my_subject_counter value > 0 } }}
							   owner = { subtract_variable = { which = my_subject_counter value = 1 } }
							   if = { limit = {  agreement_preset = preset_subsidiary  }
				                      owner = { subtract_variable = { which = my_subsidiary_counter value = 1 } }
				                      if = { limit = { target = { has_country_flag = my_subsidiary_check} } 
								             target = { remove_country_flag = my_subsidiary_check}
								           }
				                    }
							   else_if = { limit = {  agreement_preset = preset_tributary }
				                      owner = { subtract_variable = { which = my_tributary_counter value = 1 } }
				                      if = { limit = { target = { has_country_flag = my_tributary_check} } 
								             target = { remove_country_flag = my_tributary_check}
								           }
					           }
							   
		                }
			        }
			}
						
	else = {
		     ROOT.owner = {
	           clear_variable = my_subject_counter
	           clear_variable = my_tributary_counter
	           clear_variable = my_subsidiary_counter
	           }
	       }
	
	
	log = "!!!!!!!!!!!!!!! test Internal object (sub): \\[ROOT.owner.my_subject_counter]."
	log = "!!!!!!!!!!!!!!! test Internal object owner (sub): \\[ROOT.owner.GetName]."
	log = "!!!!!!!!!!!!!!! test Subsidiary counter (sub): \\[ROOT.owner.my_subsidiary_counter]."
	log = "!!!!!!!!!!!!!!! test Tributary counter (sub): \\[ROOT.owner.my_tributary_counter]."
	clear_variable = my_test_var
}

vn_add_stat = {
  	log = "!!!!!!!!!!!!!!! Subject Name: \\[This.owner.GetName]."
  	
   	ROOT = {
		set_variable = { which = my_test_var value = 0  }
	if = { limit = { agreement_preset = preset_subsidiary }
	      change_variable = { which = my_test_var value = 1 }   
		}
	log = "!!!!!!!!!!!!!!! Is Subsidiary: \\[This.my_test_var]."
	}
	
}
